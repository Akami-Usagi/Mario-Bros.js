/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 c:\Users\mouli\Mario-Bros.js\public\BrickBreak.glb -o c:\Users\mouli\Mario-Bros.js\public\BrickBreak..js 
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
import { LoopOnce } from "three";

export function BrickBreak({ position }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/BrickBreak.glb");
  const { actions } = useAnimations(animations, group);
  const [shouldShow, setShouldShow] = useState(true);
  const duration = 1466 / 3;
  
  useGSAP(() => {
    materials.BlockBrickMat00.transparent = true;
      gsap.fromTo(
        materials.BlockBrickMat00,
        { opacity: 1 },
        { opacity: 0, duration: duration / 1000, onComplete: () => setShouldShow(false)}
      );
    
  },[]);
  
  useEffect(() => {

      actions["break"].play();
      actions["break"].setEffectiveTimeScale(3);
      actions["break"].clampWhenFinished = true;
      actions["break"].loop = LoopOnce;
    
    

    return () => actions["break"].stop();
  }, []);
  if (!shouldShow) return null;

  return (
    <group ref={group} position={position} dispose={null}>
      <group name="BrickBreak">
        <group name="BrickBreak_1">
          <group name="AllRoot">
            <primitive opacity={0} object={nodes.BlockBrick00}  />
            <primitive object={nodes.BlockBrick01}  />
            <primitive object={nodes.BlockBrick02}  />
            <primitive object={nodes.BlockBrick03}  />
            <primitive object={nodes.BlockBrick04}  />
            <primitive object={nodes.BlockBrick05}  />
            <primitive object={nodes.BlockBrick06}  />
          </group>
          <skinnedMesh
            
            name="BlockBrick00__BlockBrickBreakMat00"
            geometry={nodes.BlockBrick00__BlockBrickBreakMat00.geometry}
            material={materials.BlockBrickMat00}
            skeleton={nodes.BlockBrick00__BlockBrickBreakMat00.skeleton}
          />
          <skinnedMesh
            
            name="BlockBrick01__BlockBrickBreakMat00"
            geometry={nodes.BlockBrick01__BlockBrickBreakMat00.geometry}
            material={materials.BlockBrickMat00}
            skeleton={nodes.BlockBrick01__BlockBrickBreakMat00.skeleton}
          />
          <skinnedMesh
            
            name="BlockBrick02__BlockBrickBreakMat00"
            geometry={nodes.BlockBrick02__BlockBrickBreakMat00.geometry}
            material={materials.BlockBrickMat00}
            skeleton={nodes.BlockBrick02__BlockBrickBreakMat00.skeleton}
          />
          <skinnedMesh
            
            name="BlockBrick03__BlockBrickBreakMat00"
            geometry={nodes.BlockBrick03__BlockBrickBreakMat00.geometry}
            material={materials.BlockBrickMat00}
            skeleton={nodes.BlockBrick03__BlockBrickBreakMat00.skeleton}
          />
          <skinnedMesh
            
            name="BlockBrick04__BlockBrickBreakMat00"
            geometry={nodes.BlockBrick04__BlockBrickBreakMat00.geometry}
            material={materials.BlockBrickMat00}
            skeleton={nodes.BlockBrick04__BlockBrickBreakMat00.skeleton}
          />
          <skinnedMesh
            
            name="BlockBrick05__BlockBrickBreakMat00"
            geometry={nodes.BlockBrick05__BlockBrickBreakMat00.geometry}
            material={materials.BlockBrickMat00}
            skeleton={nodes.BlockBrick05__BlockBrickBreakMat00.skeleton}
          />
          <skinnedMesh
            
            name="BlockBrick06__BlockBrickBreakMat00"
            geometry={nodes.BlockBrick06__BlockBrickBreakMat00.geometry}
            material={materials.BlockBrickMat00}
            skeleton={nodes.BlockBrick06__BlockBrickBreakMat00.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/BrickBreak.glb");
